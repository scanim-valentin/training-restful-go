@startuml  sequence_white_box 
actor User

actor "In-Browser ReactJS frontend" as front
box "RESTful go API"
  participant  "Server" as server
  participant "Utilities" as utils
  participant "PostgreSQL database" as db

end box

note over User, front : Note: Frontend is served by a service based on ReactJS (server-side and client-side)\nThis service is not represented here as an actor because its sole purpose is\nto provide the client to the user's browser\nThe In-Browser ReactJS frontend actor regroups server-side and client-side\nBut JS code is exectued client-side, so it should be the client address that is sent\nto the DB and not the frontend server address
== User connects to service ==
User -> front ++ : Connecting to frontend service\nCharging view and ReactJS
  
== Register or login phase ==
  alt
  User -> front++ : Register attempt as "name"
    front -> server++ : [GET] .../getNewUserID?=name
        server -> utils ++ : Register(w,r)
            utils -> utils : ip, port = getIP(r)
            utils -> db ++  : INSERT INTO users (name, ip, port) VALUES ("name", ip, port) ;\n SELECT currval(pg_get_serial_sequence("users","id"));
            db -> utils -- : 3265
        utils -> server -- : "3265"
    server -> front -- : "3265"
  front -> User -- : Logged in
  else
  User -> front++ : Login attempt as user ID 3265
    front -> server++ : [GET] .../login?=3265
        server -> utils ++ : Login(w,r)
            utils -> utils : ip, port = getIP(r)
            utils -> db ++  : UPDATE users SET ip = ip, port = port WHERE id = 3265;\n SELECT * FROM users;
            db -> utils -- : user_list
        utils -> server -- : user_list
    server -> front -- : users.json
  front -> User -- : List of other users
  end

== Start chatting session with user "other" == 
  User --> front ++ : Select user "other" from list with id 3103
    front -> server++ : [GET] .../select?=3103
        server -> utils ++ : GetConversation(w,r)
            utils -> db ++  : SELECT * FROM messages\nWHERE source = 3103 AND destination = 3265\nOR source = 3265 AND destination = 3103\nORDER BY time ACS;
            db -> utils -- : message_list
        utils -> server -- : message_list
    server -> front -- : conversation.json
  front -> User -- : Conversation with user "other"

== User "user" sends message to user "other" == 
  User --> front ++ : Sends "Hello" to user "other"
    front -> server++ : [POST] .../SendMessage\nsource=3265&destination=3103&body=Hello
        server -> server : time=time.Now()
        server -> utils ++ : SendMessage(w,r)
            utils -> db  : INSERT INTO messages (source, destination, body, time) VALUES (3265,3103,"Hello",time);\n SELECT currval(pg_get_serial_sequence("messages","id"));
            db -> utils -- : 54
        utils -> server -- : true
    server -> front -- : [HTTP response status] 201 Created
  front -> User -- : New message appears

== User "other" sends message "Hi!" to user "user" ==
        server -> db ++ : SELECT ip, port FROM users WHERE id = 3265;
        db -> server -- : user_ip, user_port
        alt not( net.user_ip.isUnspecified() )
        server -> front ++ : [POST] .../SendMessage\nsource=3103&destination=3265&body=Hi!
      front -> User : New message appears\n(if current chatting session is with user "other") 
        end

== User disconnects from service ==  
User -> front : Disconnects from frontend service
front -> server++ : [GET] .../Logout?=3265
    front -> front -- : Disconnects
    server -> utils ++ : Logout(w,r)
        utils -> db  : UPDATE users SET ip = 0.0.0.0 and port = 0 WHERE id = 3265;

@enduml